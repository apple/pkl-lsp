  //===----------------------------------------------------------------------===//
  // Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //     https://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.
  //===----------------------------------------------------------------------===//
  module pkl.experimental.syntax.tests.ClassOrModuleNode
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/
  
  amends "pkl:test"
  
  import "../ClassOrModuleNode.pkl"
  import "../TypeNode.pkl"
  
  facts {
//^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/facts.
    ["property definitions"] {
      new ClassOrModuleNode.PropertyDefinitionNode {
//                          ^^^^^^^^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `ClassOrModuleNode.pkl`/PropertyDefinitionNode#
        name {
//      ^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/name.
          value = "myProperty"
//        ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/value.
        }
        typeAnnotation {
//      ^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/typeAnnotation.
          type = new TypeNode.StringLiteralTypeNode {
//        ^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/type.
//                            ^^^^^^^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `TypeNode.pkl`/StringLiteralTypeNode#
            value = "my string"
//          ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/value.
          }
        }
      }.render("") == """
//      ^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `ClassOrModuleNode.pkl`/PropertyDefinitionNode#render().
        myProperty: "my string"
        """
    }
    ["property definitions - annotations"] {
      local prop = new ClassOrModuleNode.PropertyDefinitionNode {
//          ^^^^ definition local prop_39
//                                       ^^^^^^^^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `ClassOrModuleNode.pkl`/PropertyDefinitionNode#
        name {
//      ^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/name.
          value = "myProperty"
//        ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/value.
        }
        typeAnnotation {
//      ^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/typeAnnotation.
          type = new TypeNode.DeclaredTypeNode {
//        ^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/type.
//                            ^^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `TypeNode.pkl`/DeclaredTypeNode#
            name {
//          ^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/name.
              parts {
//            ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/parts.
                new { value = "MyType" }
//                    ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/value.
              }
            }
          }
        }
        docComment {
//      ^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/docComment.
          value = """
//        ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/value.
            This has been deprecated
  
            because of stuff.
            """
        }
        annotations {
//      ^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/annotations.
          new {
            identifier {
//          ^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/identifier.
              parts {
//            ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/parts.
                new { value = "Deprecated" }
//                    ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `tests/ClassOrModuleNode.pkl`/value.
              }
            }
          }
        }
      }
      prop.render("") == """
//    ^^^^ reference local prop_39
//         ^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `ClassOrModuleNode.pkl`/PropertyDefinitionNode#render().
        /// This has been deprecated
        ///
        /// because of stuff.
        @Deprecated
        myProperty: MyType
        """
      prop.render("  ") == """
//    ^^^^ reference local prop_39
//         ^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.syntax 1.1.0 `ClassOrModuleNode.pkl`/PropertyDefinitionNode#render().
          /// This has been deprecated
          ///
          /// because of stuff.
          @Deprecated
          myProperty: MyType
        """
    }
  }
  
