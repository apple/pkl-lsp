  //===----------------------------------------------------------------------===//
  // Copyright Â© 2024-2025 Apple Inc. and the Pkl project authors. All rights reserved.
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //     https://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.
  //===----------------------------------------------------------------------===//
  /// Prometheus supports two types of rules which may be configured
  /// and then evaluated at regular intervals: recording rules and alerting rules.
  ///
  /// To include rules in Prometheus, create a file containing the necessary rule statements
  /// and have Prometheus load the file via [Configuration.rule_files].
  ///
  /// The rule files can be reloaded at runtime by sending `SIGHUP` to the Prometheus process.
  /// The changes are only applied if all rule files are well-formatted.
  ///
  /// More details: <https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/>
  @ModuleInfo { minPklVersion = "0.25.0" }
// ^^^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/ModuleInfo#
//              ^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/minPklVersion.
  open module io.prometheus.Rule
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/
  
  extends "PrometheusObject.pkl"
  
  import "Configuration.pkl"
  
  groups: Listing<RuleGroup>?
//^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/groups.
//        ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/RuleGroup#
  
  typealias RuleGroup = *AlertingRuleGroup|RecordingRuleGroup
//          ^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/RuleGroup#
//                       ^^^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/AlertingRuleGroup#
//                                         ^^^^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/RecordingRuleGroup#
  
  class RecordingRuleGroup {
//      ^^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/RecordingRuleGroup#
    /// The name of the group. Must be unique within a file.
    name: MetricNameFormat
//  ^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/RecordingRuleGroup#name.
//  documentation
//  > The name of the group. Must be unique within a file.
//        ^^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `PrometheusObject.pkl`/MetricNameFormat#
  
    /// How often rules in the group are evaluated.
    interval: Duration?
//  ^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/RecordingRuleGroup#interval.
//  documentation
//  > How often rules in the group are evaluated.
//            ^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Duration#
  
    /// Thanos Ruler's partial response behavior
    partial_response_strategy: String?
//  ^^^^^^^^^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/RecordingRuleGroup#partial_response_strategy.
//  documentation
//  > Thanos Ruler's partial response behavior
//                             ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
  
    /// Limit the number of alerts an alerting rule and series a recording rule can produce.
    limit: Int?
//  ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/RecordingRuleGroup#limit.
//  documentation
//  > Limit the number of alerts an alerting rule and series a recording rule can produce.
//         ^^^ reference pkl . pkl 0.29.0 `pkl.base`/Int#
  
    /// Labels to add or overwrite before storing the result for its rules.
    ///
    /// Labels defined in [RecordingRule] will override the key if it has a collision.
    labels: Labels?
//  ^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/RecordingRuleGroup#labels.
//  documentation
//  > Labels to add or overwrite before storing the result for its rules.
//  > 
//  > Labels defined in [`RecordingRule`](file:///Users/thomas/src/github.com/apple/pkl-pantry/packages/io.prometheus/Rule.pkl#L128,C7) will override the key if it has a collision.
//          ^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `PrometheusObject.pkl`/Labels#
  
    rules: Listing<RecordingRule>
//  ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/RecordingRuleGroup#rules.
//         ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                 ^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/RecordingRule#
  }
  
  class AlertingRuleGroup {
//      ^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/AlertingRuleGroup#
    /// The name of the group. Must be unique within a file.
    name: LabelNameFormat
//  ^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/AlertingRuleGroup#name.
//  documentation
//  > The name of the group. Must be unique within a file.
//        ^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `PrometheusObject.pkl`/LabelNameFormat#
  
    /// How often rules in the group are evaluated.
    interval: Duration?
//  ^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/AlertingRuleGroup#interval.
//  documentation
//  > How often rules in the group are evaluated.
//            ^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Duration#
  
    /// Thanos Ruler's partial response behavior
    partial_response_strategy: String?
//  ^^^^^^^^^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/AlertingRuleGroup#partial_response_strategy.
//  documentation
//  > Thanos Ruler's partial response behavior
//                             ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
  
    /// Limit the number of alerts an alerting rule and series a recording rule can produce.
    limit: Int?
//  ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/AlertingRuleGroup#limit.
//  documentation
//  > Limit the number of alerts an alerting rule and series a recording rule can produce.
//         ^^^ reference pkl . pkl 0.29.0 `pkl.base`/Int#
  
    /// Labels to add or overwrite before storing the result for its rules.
    ///
    /// Labels defined in [AlertingRule] will override the key if it has a collision.
    labels: Labels?
//  ^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/AlertingRuleGroup#labels.
//  documentation
//  > Labels to add or overwrite before storing the result for its rules.
//  > 
//  > Labels defined in [`AlertingRule`](file:///Users/thomas/src/github.com/apple/pkl-pantry/packages/io.prometheus/Rule.pkl#L87,C7) will override the key if it has a collision.
//          ^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `PrometheusObject.pkl`/Labels#
  
    rules: Listing<AlertingRule>
//  ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/AlertingRuleGroup#rules.
//         ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                 ^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/AlertingRule#
  }
  
  /// Alerting rules allow you to define alert conditions
  /// based on Prometheus expression language expressions
  /// and to send notifications about firing alerts to an external service.
  ///
  /// Whenever the alert expression results in one or more vector elements at a given point in time,
  /// the alert counts as active for these elements' label sets.
  ///
  /// More details: <https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/#rule>
  class AlertingRule {
//      ^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/AlertingRule#
//      documentation
//      > Alerting rules allow you to define alert conditions
//      > based on Prometheus expression language expressions
//      > and to send notifications about firing alerts to an external service.
//      > 
//      > Whenever the alert expression results in one or more vector elements at a given point in time,
//      > the alert counts as active for these elements' label sets.
//      > 
//      > More details: <https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/#rule>
    /// The name of the alert. Must be a valid label value.
    alert: String
//  ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/AlertingRule#alert.
//  documentation
//  > The name of the alert. Must be a valid label value.
//         ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
  
    /// The PromQL expression to evaluate.
    ///
    /// Every evaluation cycle this is evaluated at the current time,
    /// and all resultant time series become pending/firing alerts.
    expr: String
//  ^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/AlertingRule#expr.
//  documentation
//  > The PromQL expression to evaluate.
//  > 
//  > Every evaluation cycle this is evaluated at the current time,
//  > and all resultant time series become pending/firing alerts.
//        ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
  
    /// Alerts are considered firing once they have been returned for this long.
    ///
    /// Alerts which have not yet fired for long enough are considered pending.
    ///
    /// Default if omitted: `0.s`
    `for`: Duration?
//  ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/AlertingRule#for.
//  documentation
//  > Alerts are considered firing once they have been returned for this long.
//  > 
//  > Alerts which have not yet fired for long enough are considered pending.
//  > 
//  > Default if omitted: `0.s`
//         ^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Duration#
  
    /// Labels to add or overwrite for each alert.
    labels: Labels?
//  ^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/AlertingRule#labels.
//  documentation
//  > Labels to add or overwrite for each alert.
//          ^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `PrometheusObject.pkl`/Labels#
  
    /// Annotations to add to each alert.
    annotations: Mapping<String, String>?
//  ^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/AlertingRule#annotations.
//  documentation
//  > Annotations to add to each alert.
//               ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                       ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
//                               ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
  }
  
  /// Recording rules allow you to precompute frequently needed or computationally
  /// expensive expressions and save their result as a new set of time series.
  ///
  /// Querying the precomputed result will then often be much faster
  /// than executing the original expression every time it is needed.
  /// This is especially useful for dashboards,
  /// which need to query the same expression repeatedly every time they refresh.
  ///
  /// Recording and alerting rules exist in a rule group.
  /// Rules within a group are run sequentially at a regular interval,
  /// with the same evaluation time.
  /// The names of recording rules must be
  /// [valid metric names](https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels).
  /// The names of alerting rules must be
  /// [valid label values](https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels).
  ///
  /// More details: <https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/#rule>
  class RecordingRule {
//      ^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/RecordingRule#
//      documentation
//      > Recording rules allow you to precompute frequently needed or computationally
//      > expensive expressions and save their result as a new set of time series.
//      > 
//      > Querying the precomputed result will then often be much faster
//      > than executing the original expression every time it is needed.
//      > This is especially useful for dashboards,
//      > which need to query the same expression repeatedly every time they refresh.
//      > 
//      > Recording and alerting rules exist in a rule group.
//      > Rules within a group are run sequentially at a regular interval,
//      > with the same evaluation time.
//      > The names of recording rules must be
//      > [valid metric names](https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels).
//      > The names of alerting rules must be
//      > [valid label values](https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels).
//      > 
//      > More details: <https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/#rule>
    /// The name of the time series to output to. Must be a valid metric name.
    `record`: String
//  ^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/RecordingRule#record.
//  documentation
//  > The name of the time series to output to. Must be a valid metric name.
//            ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
  
    /// The PromQL expression to evaluate.
    ///
    /// Every evaluation cycle this is evaluated at the current time,
    /// and the result recorded as a new set of time series with the metric name as given by 'record'.
    expr: String
//  ^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/RecordingRule#expr.
//  documentation
//  > The PromQL expression to evaluate.
//  > 
//  > Every evaluation cycle this is evaluated at the current time,
//  > and the result recorded as a new set of time series with the metric name as given by 'record'.
//        ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
  
    /// Labels to add or overwrite before storing the result.
    labels: Labels?
//  ^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `Rule.pkl`/RecordingRule#labels.
//  documentation
//  > Labels to add or overwrite before storing the result.
//          ^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/io.prometheus 1.4.0 `PrometheusObject.pkl`/Labels#
  }
  
