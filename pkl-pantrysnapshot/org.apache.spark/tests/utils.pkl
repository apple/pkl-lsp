  //===----------------------------------------------------------------------===//
  // Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //     https://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.
  //===----------------------------------------------------------------------===//
  module org.apache.spark.tests.utils
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/org.apache.spark 1.0.2 `tests/utils.pkl`/
  
  amends "pkl:test"
  
  import "../utils.pkl"
  
  examples {
//^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/org.apache.spark 1.0.2 `tests/utils.pkl`/examples.
    ["convertIndexedProperty"] {
      utils.convertIndexedProperty("foo.bar.[baz].biz.[buz]", new Mapping {
//    ^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.apache.spark 1.0.2 `utils.pkl`/
//          ^^^^^^^^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.apache.spark 1.0.2 `utils.pkl`/convertIndexedProperty().
//                                                                ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
        ["1"] = new Mapping {
//                  ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
          ["11"] = "eleven"
          ["12"] = "twelve"
        }
        ["2"] = new Mapping {
//                  ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
          ["22"] = "two"
        }
      })
      utils.convertIndexedProperty("foo.bar.[baz].biz", new Mapping {
//    ^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.apache.spark 1.0.2 `utils.pkl`/
//          ^^^^^^^^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.apache.spark 1.0.2 `utils.pkl`/convertIndexedProperty().
//                                                          ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
        ["1"] = 1
        ["2"] = 2
      })
    }
    ["flattenMapKeys"] {
      utils.flattenMapKeys(new Mapping {
//    ^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.apache.spark 1.0.2 `utils.pkl`/
//          ^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.apache.spark 1.0.2 `utils.pkl`/flattenMapKeys().
//                             ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
        ["1"] = new Mapping {
//                  ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
          ["11"] = "eleven"
          ["12"] = "twelve"
        }
        ["2"] = new Mapping {
//                  ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
          ["22"] = "two"
        }
      }, List())
//       ^^^^ reference pkl . pkl 0.29.0 `pkl.base`/List().
    }
    ["convertProperty"] {
      utils.convertProperty("foo.bar.baz", 1)
//    ^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.apache.spark 1.0.2 `utils.pkl`/
//          ^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.apache.spark 1.0.2 `utils.pkl`/convertProperty().
      utils.convertProperty("foo.env.[baz]", new Mapping { ["FOO"] = "foo"; ["BAR"] = "bar" })
//    ^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.apache.spark 1.0.2 `utils.pkl`/
//          ^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.apache.spark 1.0.2 `utils.pkl`/convertProperty().
//                                               ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
      utils.convertProperty("foo.env.[baz].buz.{baz}", new Mapping { ["FOO"] = new Mapping { ["BAR"] = "bar" } })
//    ^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.apache.spark 1.0.2 `utils.pkl`/
//          ^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.apache.spark 1.0.2 `utils.pkl`/convertProperty().
//                                                         ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                                                                                 ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
      utils.convertProperty("spark.kubernetes.baz", 5.gib)
//    ^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.apache.spark 1.0.2 `utils.pkl`/
//          ^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.apache.spark 1.0.2 `utils.pkl`/convertProperty().
//                                                    ^^^ reference pkl . pkl 0.29.0 `pkl.base`/Int#gib.
      utils.convertProperty("spark.memory", 5.gib)
//    ^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.apache.spark 1.0.2 `utils.pkl`/
//          ^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.apache.spark 1.0.2 `utils.pkl`/convertProperty().
//                                            ^^^ reference pkl . pkl 0.29.0 `pkl.base`/Int#gib.
    }
  }
  
