  //===----------------------------------------------------------------------===//
  // Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //     https://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.
  //===----------------------------------------------------------------------===//
  /// Template for generating Kubernetes manifests for apps.
  ///
  /// This template assumes a three-level configuration hierarchy: application, environment, and cluster.
  /// Modules at the root of the configuration hierarchy directly amend this module
  /// (`amends "package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster@<version>#/AppEnvCluster.pkl"`).
  /// All other modules amend their parent (`amends "..."`).
  ///
  /// Leaf modules dictate which Kubernetes resources are generated.
  /// To generate all resources, evaluate all modules (non-leaf modules are automatically ignored):
  ///
  /// ```bash
  /// $ pkl eval **/*.pkl
  /// ```
  ///
  /// By default, all resources are written to standard output as a YAML stream, where each resource
  /// is separated using `---`.
  /// This YAML stream may also be written to a file using the
  /// [`-o`](https://pkl-lang.org/main/current/pkl-cli/index.html#output-path) flag.
  ///
  /// Each resource can also be written to its own file using the
  /// [`-m`](https://pkl-lang.org/main/current/pkl-cli/index.html#multiple-file-output-path) flag.
  /// When writing individual files, the file paths follow the same three-level hierarchy of
  /// application, environment and cluster.
  ///
  /// ```bash
  /// # Write all resources as a YAML stream into `output.yaml`
  /// $ pkl eval -o output.yaml **/*.pkl
  ///
  /// # Write each resource to its own file to the `.out/` directory
  /// $ pkl eval -m .out/ **/*.pkl
  /// ```
  ///
  /// Modules higher up in the config hierarchy contain configuration common to their descendants.
  ///
  /// Kubernetes resources are grouped by kind and keyed by name:
  ///
  /// ```pkl
  /// ingresses {
  ///   ["cluster-service.example.com"] { ... }
  /// }
  /// services {
  ///   ["cluster-service"] { ... }
  /// }
  /// ```
  ///
  /// Resource names are used as default values for the resources' `metadata.name` properties.
  ///
  /// Kubernetes configuration often contains lists of key-value pairs.
  /// To override a particular value, match its key with a _predicate_:
  ///
  /// ```pkl
  /// env { // list of environment variable names and values
  ///   [[name == "IMAGE_REPOSITORY"]] { // override value(s) matching this predicate
  ///     value = "docker.com"
  ///   }
  /// }
  /// ```
  ///
  /// Note the use of double brackets (`[[...]]`), which distinguishes a predicate from an ordinary key (`[...]`).
  ///
  /// == Extending This Template
  ///
  /// This template only covers the most common kinds of resources: [configMaps], [deployments], [ingresses], etc.
  /// To describe other kinds of resources, _extend_ this template and add additional top-level properties.
  /// For example, to describe _HorizontalPodAutoscaler_ resources,
  /// create a new file named `MyTemplate.pkl` with the following content:
  ///
  /// ```pkl
  /// module MyTemplate
  ///
  /// extends "package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster@<version>#/AppEnvCluster.pkl"
  ///
  /// import "package://pkg.pkl-lang.org/pkl-k8s/k8s@<version>#/api/autoscaling/v1/HorizontalPodAutoscaler.pkl"
  ///
  /// horizontalPodAutoscalers: Mapping<String, HorizontalPodAutoscaler> = module.resourceMapping(HorizontalPodAutoscaler)
  /// ```
  ///
  /// To browse Pkl Kubernetes templates and determine their import URIs (such as `package://pkg.pkl-lang.org/pkl-k8s/k8s@1.0.0#/api/core/v1/Pod.pkl`),
  /// go to [the package repo](https://pkl-lang.org/package-docs/pkg.pkl-lang.org/pkl-k8s/k8s/current/).
  @ModuleInfo { minPklVersion = "0.25.0" }
// ^^^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/ModuleInfo#
//              ^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/minPklVersion.
  open module k8s.contrib.appEnvCluster.AppEnvCluster
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/
  
  import "pkl:reflect"
  import "@k8s/K8sObject.pkl"
  import "@k8s/K8sResource.pkl"
  import "@k8s/api/apps/v1/Deployment.pkl"
  import "@k8s/api/apps/v1/StatefulSet.pkl"
  import "@k8s/api/core/v1/ConfigMap.pkl"
  import "@k8s/api/core/v1/PersistentVolumeClaim.pkl"
  import "@k8s/api/core/v1/Pod.pkl"
  import "@k8s/api/core/v1/Secret.pkl"
  import "@k8s/api/core/v1/Service.pkl"
  import "@k8s/api/networking/v1/Ingress.pkl"
  import "@k8s/apimachinery/pkg/apis/meta/v1/ObjectMeta.pkl"
  
  /// Kubernetes resources of type [ConfigMap], keyed by name.
  ///
  /// The resources' `metadata.name` property is automatically set to their key.
  configMaps: Mapping<String, ConfigMap> = resourceMapping(ConfigMap)
//^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/configMaps.
//documentation
//> Kubernetes resources of type [`ConfigMap`](pkl-lsp://jar/jar%3Afile%3A%2F%2F%2FUsers%2Fthomas%2F.pkl%2Fcache%2Fpackage-2%2Fpkg.pkl-lang.org%2Fpkl-k8s%2Fk8s%401.0.1%2Fk8s%401.0.1.zip%21%2Fapi%2Fcore%2Fv1%2FConfigMap.pkl#L19,C1), keyed by name.
//> 
//> The resources' `metadata.name` property is automatically set to their key.
//            ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                    ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
//                            ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `api/core/v1/ConfigMap.pkl`/
//                                         ^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/resourceMapping().
//                                                         ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `api/core/v1/ConfigMap.pkl`/
  
  /// Kubernetes resources of type [Deployment], keyed by name.
  ///
  /// The resources' `metadata.name` property is automatically set to their key.
  deployments: Mapping<String, Deployment> = resourceMapping(Deployment)
//^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/deployments.
//documentation
//> Kubernetes resources of type [`Deployment`](pkl-lsp://jar/jar%3Afile%3A%2F%2F%2FUsers%2Fthomas%2F.pkl%2Fcache%2Fpackage-2%2Fpkg.pkl-lang.org%2Fpkl-k8s%2Fk8s%401.0.1%2Fk8s%401.0.1.zip%21%2Fapi%2Fapps%2Fv1%2FDeployment.pkl#L19,C1), keyed by name.
//> 
//> The resources' `metadata.name` property is automatically set to their key.
//             ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                     ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
//                             ^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `api/apps/v1/Deployment.pkl`/
//                                           ^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/resourceMapping().
//                                                           ^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `api/apps/v1/Deployment.pkl`/
  
  /// Kubernetes resources of type [Ingress], keyed by name.
  ///
  /// The resources' `metadata.name` property is automatically set to their key.
  ingresses: Mapping<String, Ingress> = resourceMapping(Ingress)
//^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/ingresses.
//documentation
//> Kubernetes resources of type [`Ingress`](pkl-lsp://jar/jar%3Afile%3A%2F%2F%2FUsers%2Fthomas%2F.pkl%2Fcache%2Fpackage-2%2Fpkg.pkl-lang.org%2Fpkl-k8s%2Fk8s%401.0.1%2Fk8s%401.0.1.zip%21%2Fapi%2Fnetworking%2Fv1%2FIngress.pkl#L21,C1), keyed by name.
//> 
//> The resources' `metadata.name` property is automatically set to their key.
//           ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                   ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
//                           ^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `api/networking/v1/Ingress.pkl`/
//                                      ^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/resourceMapping().
//                                                      ^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `api/networking/v1/Ingress.pkl`/
  
  /// Kubernetes resources of type [PersistentVolumeClaim], keyed by name.
  ///
  /// The resources' `metadata.name` property is automatically set to their key.
  persistentVolumeClaims: Mapping<String, PersistentVolumeClaim> = resourceMapping(PersistentVolumeClaim)
//^^^^^^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/persistentVolumeClaims.
//documentation
//> Kubernetes resources of type [`PersistentVolumeClaim`](pkl-lsp://jar/jar%3Afile%3A%2F%2F%2FUsers%2Fthomas%2F.pkl%2Fcache%2Fpackage-2%2Fpkg.pkl-lang.org%2Fpkl-k8s%2Fk8s%401.0.1%2Fk8s%401.0.1.zip%21%2Fapi%2Fcore%2Fv1%2FPersistentVolumeClaim.pkl#L19,C1), keyed by name.
//> 
//> The resources' `metadata.name` property is automatically set to their key.
//                        ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                                ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
//                                        ^^^^^^^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `api/core/v1/PersistentVolumeClaim.pkl`/
//                                                                 ^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/resourceMapping().
//                                                                                 ^^^^^^^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `api/core/v1/PersistentVolumeClaim.pkl`/
  
  /// Kubernetes resources of type [Pod], keyed by name.
  ///
  /// The resources' `metadata.name` property is automatically set to their key.
  pods: Mapping<String, Pod> = resourceMapping(Pod)
//^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/pods.
//documentation
//> Kubernetes resources of type [`Pod`](pkl-lsp://jar/jar%3Afile%3A%2F%2F%2FUsers%2Fthomas%2F.pkl%2Fcache%2Fpackage-2%2Fpkg.pkl-lang.org%2Fpkl-k8s%2Fk8s%401.0.1%2Fk8s%401.0.1.zip%21%2Fapi%2Fcore%2Fv1%2FPod.pkl#L21,C1), keyed by name.
//> 
//> The resources' `metadata.name` property is automatically set to their key.
//      ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//              ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
//                      ^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `api/core/v1/Pod.pkl`/
//                             ^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/resourceMapping().
//                                             ^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `api/core/v1/Pod.pkl`/
  
  /// Kubernetes resources of type [Secret], keyed by name.
  ///
  /// The resources' `metadata.name` property is automatically set to their key.
  secrets: Mapping<String, Secret> = resourceMapping(Secret)
//^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/secrets.
//documentation
//> Kubernetes resources of type [`Secret`](pkl-lsp://jar/jar%3Afile%3A%2F%2F%2FUsers%2Fthomas%2F.pkl%2Fcache%2Fpackage-2%2Fpkg.pkl-lang.org%2Fpkl-k8s%2Fk8s%401.0.1%2Fk8s%401.0.1.zip%21%2Fapi%2Fcore%2Fv1%2FSecret.pkl#L21,C1), keyed by name.
//> 
//> The resources' `metadata.name` property is automatically set to their key.
//         ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                 ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
//                         ^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `api/core/v1/Secret.pkl`/
//                                   ^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/resourceMapping().
//                                                   ^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `api/core/v1/Secret.pkl`/
  
  /// Kubernetes resources of type [Service], keyed by name.
  ///
  /// The resources' `metadata.name` property is automatically set to their key.
  services: Mapping<String, Service> = resourceMapping(Service)
//^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/services.
//documentation
//> Kubernetes resources of type [`Service`](pkl-lsp://jar/jar%3Afile%3A%2F%2F%2FUsers%2Fthomas%2F.pkl%2Fcache%2Fpackage-2%2Fpkg.pkl-lang.org%2Fpkl-k8s%2Fk8s%401.0.1%2Fk8s%401.0.1.zip%21%2Fapi%2Fcore%2Fv1%2FService.pkl#L19,C1), keyed by name.
//> 
//> The resources' `metadata.name` property is automatically set to their key.
//          ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                  ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
//                          ^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `api/core/v1/Service.pkl`/
//                                     ^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/resourceMapping().
//                                                     ^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `api/core/v1/Service.pkl`/
  
  /// Kubernetes resources of type [StatefulSet], keyed by name.
  ///
  /// The resources' `metadata.name` property is automatically set to their key.
  statefulSets: Mapping<String, StatefulSet> = resourceMapping(StatefulSet)
//^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/statefulSets.
//documentation
//> Kubernetes resources of type [`StatefulSet`](pkl-lsp://jar/jar%3Afile%3A%2F%2F%2FUsers%2Fthomas%2F.pkl%2Fcache%2Fpackage-2%2Fpkg.pkl-lang.org%2Fpkl-k8s%2Fk8s%401.0.1%2Fk8s%401.0.1.zip%21%2Fapi%2Fapps%2Fv1%2FStatefulSet.pkl#L25,C1), keyed by name.
//> 
//> The resources' `metadata.name` property is automatically set to their key.
//              ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                      ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
//                              ^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `api/apps/v1/StatefulSet.pkl`/
//                                             ^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/resourceMapping().
//                                                             ^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `api/apps/v1/StatefulSet.pkl`/
  
  /// The application that [resources] belong to.
  ///
  /// This is the first level of the application/environment/cluster directory structure.
  /// To access this property from a module that amends this template, use `module.app`.
  hidden app: String = path[0]
//       ^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/app.
//       documentation
//       > The application that `resources` belong to.
//       > 
//       > This is the first level of the application/environment/cluster directory structure.
//       > To access this property from a module that amends this template, use `module.app`.
//            ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
//                     ^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/path.
  
  /// The environment that [resources] belong to.
  ///
  /// This is the second level of the application/environment/cluster directory structure.
  /// To access this property from a module that amends this template, use `module.env`.
  hidden env: String = path[1]
//       ^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/env.
//       documentation
//       > The environment that `resources` belong to.
//       > 
//       > This is the second level of the application/environment/cluster directory structure.
//       > To access this property from a module that amends this template, use `module.env`.
//            ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
//                     ^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/path.
  
  /// The cluster that [resources] belong to.
  ///
  /// This is the third level of the application/environment/cluster directory structure.
  /// To access this property from a module that amends this template, use `module.cluster`.
  hidden cluster: String = path[2]
//       ^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/cluster.
//       documentation
//       > The cluster that `resources` belong to.
//       > 
//       > This is the third level of the application/environment/cluster directory structure.
//       > To access this property from a module that amends this template, use `module.cluster`.
//                ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
//                         ^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/path.
  
  /// File path between the current module ([this]) and its template, relative to the template.
  ///
  /// Does not include the current module's file name.
  hidden path: List<String> = findRootModule(reflect.Module(module)).relativePathTo(module)
//       ^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/path.
//       documentation
//       > File path between the current module (`this`) and its template, relative to the template.
//       > 
//       > Does not include the current module's file name.
//             ^^^^ reference pkl . pkl 0.29.0 `pkl.base`/List#
//                  ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
//                            ^^^^^^^^^^^^^^ reference local findRootModule_201
//                                           ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.reflect`/
//                                                   ^^^^^^ reference pkl . pkl 0.29.0 `pkl.reflect`/Module().
//                                                                   ^^^^^^^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Module#relativePathTo().
  
  /// Renders a Pkl object as YAML string.
  ///
  /// With this method, YAML files in [ConfigMap]s can be specified as Pkl objects rather than strings.
  function toYamlString(obj: Object): String = output.renderer.renderValue(obj)
//         ^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/toYamlString().
//         documentation
//         > Renders a Pkl object as YAML string.
//         > 
//         > With this method, YAML files in [`ConfigMap`](pkl-lsp://jar/jar%3Afile%3A%2F%2F%2FUsers%2Fthomas%2F.pkl%2Fcache%2Fpackage-2%2Fpkg.pkl-lang.org%2Fpkl-k8s%2Fk8s%401.0.1%2Fk8s%401.0.1.zip%21%2Fapi%2Fcore%2Fv1%2FConfigMap.pkl#L19,C1)s can be specified as Pkl objects rather than strings.
//                      ^^^ definition local obj_177
//                           ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Object#
//                                    ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
//                                             ^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/output.
//                                                    ^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/FileOutput#renderer.
//                                                             ^^^^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/ValueRenderer#renderValue().
//                                                                         ^^^ reference local obj_177
  
  /// Creates an empty mapping from resource name to resource [type] that defaults `metadata.name` to the resource name.
  function resourceMapping(type): Mapping<String, unknown> =
//         ^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/resourceMapping().
//         documentation
//         > Creates an empty mapping from resource name to resource [`type`](file:///Users/thomas/src/github.com/apple/pkl-pantry/packages/k8s.contrib.appEnvCluster/AppEnvCluster.pkl#L180,C26) that defaults `metadata.name` to the resource name.
//                         ^^^^ definition local type_180
//                                ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                                        ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
    new Mapping { default = (key) -> (type) { metadata { name = key } } }
//      ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                ^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/default.
//                           ^^^ definition local key_181
//                                    ^^^^ reference local type_180
//                                            ^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/metadata.
//                                                       ^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/name.
//                                                              ^^^ reference local key_181
  
  /// Tells if the current module ([this]) is a leaf module. Only leaf modules generate output.
  ///
  /// Override this method to extend the application/environment/cluster directory structure beyond three levels.
  function isLeafModule(): Boolean = path.length == 3
//         ^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/isLeafModule().
//         documentation
//         > Tells if the current module (`this`) is a leaf module. Only leaf modules generate output.
//         > 
//         > Override this method to extend the application/environment/cluster directory structure beyond three levels.
//                         ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Boolean#
//                                   ^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/path.
//                                        ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/List#length.
  
  output {
//^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/output.
    renderer = new YamlRenderer {
//  ^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/renderer.
//                 ^^^^^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/YamlRenderer#
      isStream = true
//    ^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/isStream.
      converters = (K8sObject.output.renderer as YamlRenderer).converters
//    ^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/converters.
//                  ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `K8sObject.pkl`/
//                            ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Module#output.
//                                   ^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/FileOutput#renderer.
//                                               ^^^^^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/YamlRenderer#
//                                                             ^^^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/ValueRenderer#converters.
    }
    value = if (isLeafModule()) module.toMap().values.flatMap((it) -> it.toMap().values) else List()
//  ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/value.
//              ^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/isLeafModule().
//                                     ^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Typed#toMap().
//                                             ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Map#values.
//                                                    ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/List#flatMap().
//                                                             ^^ definition local it_193
//                                                                    ^^ reference local it_193
//                                                                                            ^^^^ reference pkl . pkl 0.29.0 `pkl.base`/List().
    files {
//  ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/files.
      for (file: K8sResource in value as List) {
//         ^^^^ definition local file_195
//               ^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `K8sResource.pkl`/
//                              ^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/value.
//                                       ^^^^ reference pkl . pkl 0.29.0 `pkl.base`/List#
        [determineFileName(file)] = file.output
//       ^^^^^^^^^^^^^^^^^ reference local determineFileName_218
//                         ^^^^ reference local file_195
//                                  ^^^^ reference local file_195
//                                       ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Module#output.
      }
    }
  }
  
  local function findRootModule(mod: reflect.Module): Module =
//               ^^^^^^^^^^^^^^ definition local findRootModule_201
//                              ^^^ definition local mod_201
//                                           ^^^^^^ reference pkl . pkl 0.29.0 `pkl.reflect`/Module#
//                                                    ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Module#
    let (supermodule = mod.supermodule)
//       ^^^^^^^^^^^ definition local supermodule_202
//                     ^^^ reference local mod_201
//                         ^^^^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.reflect`/Module#supermodule.
      if (supermodule == null || !supermodule.isAmend) mod.reflectee
//        ^^^^^^^^^^^ reference local supermodule_202
//                                ^^^^^^^^^^^ reference local supermodule_202
//                                            ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.reflect`/Module#isAmend.
//                                                     ^^^ reference local mod_201
//                                                         ^^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.reflect`/Module#reflectee.
      else findRootModule(supermodule)
//         ^^^^^^^^^^^^^^ reference local findRootModule_201
//                        ^^^^^^^^^^^ reference local supermodule_202
  
  local class GroupVersion {
//            ^^^^^^^^^^^^ definition local GroupVersion_206
    group: String?
//  ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/GroupVersion#group.
//         ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
    version: String
//  ^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/GroupVersion#version.
//           ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
  }
  
  local function parseGroupVersion(apiVersionString: String): GroupVersion =
//               ^^^^^^^^^^^^^^^^^ definition local parseGroupVersion_211
//                                 ^^^^^^^^^^^^^^^^ definition local apiVersionString_211
//                                                   ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
//                                                            ^^^^^^^^^^^^ reference local GroupVersion_206
    let (idx = apiVersionString.indexOfOrNull("/"))
//       ^^^ definition local idx_212
//             ^^^^^^^^^^^^^^^^ reference local apiVersionString_211
//                              ^^^^^^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#indexOfOrNull().
      if (idx == null)
//        ^^^ reference local idx_212
        new { version = apiVersionString }
//            ^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/version.
//                      ^^^^^^^^^^^^^^^^ reference local apiVersionString_211
      else
        new { group = apiVersionString.take(idx); version = apiVersionString.drop(idx + 1) }
//            ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/group.
//                    ^^^^^^^^^^^^^^^^ reference local apiVersionString_211
//                                     ^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#take().
//                                          ^^^ reference local idx_212
//                                                ^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/version.
//                                                          ^^^^^^^^^^^^^^^^ reference local apiVersionString_211
//                                                                           ^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#drop().
//                                                                                ^^^ reference local idx_212
  
  local function determineFileName(resource: K8sResource) =
//               ^^^^^^^^^^^^^^^^^ definition local determineFileName_218
//                                 ^^^^^^^^ definition local resource_218
//                                           ^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `K8sResource.pkl`/
    let (metadata = resource.getPropertyOrNull("metadata") as ObjectMeta?)
//       ^^^^^^^^ definition local metadata_219
//                  ^^^^^^^^ reference local resource_218
//                           ^^^^^^^^^^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Typed#getPropertyOrNull().
//                                                            ^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `apimachinery/pkg/apis/meta/v1/ObjectMeta.pkl`/
      let (groupVersion = parseGroupVersion(resource.apiVersion))
//         ^^^^^^^^^^^^ definition local groupVersion_220
//                        ^^^^^^^^^^^^^^^^^ reference local parseGroupVersion_211
//                                          ^^^^^^^^ reference local resource_218
//                                                   ^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `K8sResource.pkl`/apiVersion.
        let (dir = path.join("/"))
//           ^^^ definition local dir_221
//                 ^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/path.
//                      ^^^^ reference pkl . pkl 0.29.0 `pkl.base`/List#join().
          let (baseName =
//             ^^^^^^^^ definition local baseName_222
            List(
//          ^^^^ reference pkl . pkl 0.29.0 `pkl.base`/List().
              metadata?.namespace,
//            ^^^^^^^^ reference local metadata_219
//                      ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `apimachinery/pkg/apis/meta/v1/ObjectMeta.pkl`/namespace.
              metadata?.name,
//            ^^^^^^^^ reference local metadata_219
//                      ^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `apimachinery/pkg/apis/meta/v1/ObjectMeta.pkl`/name.
              groupVersion.group,
//            ^^^^^^^^^^^^ reference local groupVersion_220
//                         ^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/k8s.contrib.appEnvCluster 1.0.2 `AppEnvCluster.pkl`/GroupVersion#group.
              resource.kind
//            ^^^^^^^^ reference local resource_218
//                     ^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-k8s/k8s 1.0.1 `K8sResource.pkl`/kind.
            ).filterNonNull().join("-")
//            ^^^^^^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/List#filterNonNull().
//                            ^^^^ reference pkl . pkl 0.29.0 `pkl.base`/List#join().
          )
            let (filePath = "\(dir)/\(baseName)")
//               ^^^^^^^^ definition local filePath_230
//                             ^^^ reference local dir_221
//                                    ^^^^^^^^ reference local baseName_222
              resource.output.renderer.extension.ifNonNull((it) -> "\(filePath).\(it)") ?? filePath
//            ^^^^^^^^ reference local resource_218
//                     ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Module#output.
//                            ^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/FileOutput#renderer.
//                                     ^^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/ValueRenderer#extension.
//                                               ^^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Any#ifNonNull().
//                                                          ^^ definition local it_231
//                                                                    ^^^^^^^^ reference local filePath_230
//                                                                                ^^ reference local it_231
//                                                                                         ^^^^^^^^ reference local filePath_230
