  //===----------------------------------------------------------------------===//
  // Copyright Â© 2024-2025 Apple Inc. and the Pkl project authors. All rights reserved.
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //     https://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.
  //===----------------------------------------------------------------------===//
  /// Definitions for a [Telegraf configuration](https://docs.influxdata.com/telegraf/v1.17/administration/configuration/).
  ///
  /// This API nests data formats as a child object of plugins.
  /// For instance, here is an example of a socket listener which uses the json data format:
  /// ```
  /// import "package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf@<version>#/plugins/parsers/JsonInputDataFormat.pkl"
  ///
  /// inputs {
  ///   socket_listener {
  ///     new {
  ///       service_address = "tcp://:8085"
  ///       data_format = new JsonInputDataFormat {
  ///         json_query = "foo.bar"
  ///         tag_keys {
  ///           "my-tag-1"
  ///           "my-tag-2"
  ///         }
  ///         json_name_key = "my_measurement"
  ///         json_time_key = "time"
  ///       }
  ///     }
  ///   }
  /// }
  /// ```
  @ModuleInfo { minPklVersion = "0.25.0" }
// ^^^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/ModuleInfo#
//              ^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/minPklVersion.
  open module com.influxdata.telegraf.Telegraf
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/
  
  import "plugins/Plugin.pkl"
  import "plugins/inputs/CpuInput.pkl"
  import "plugins/inputs/DiskInput.pkl"
  import "plugins/inputs/ExecInput.pkl"
  import "plugins/inputs/FileInput.pkl"
  import "plugins/inputs/HttpInput.pkl"
  import "plugins/inputs/Jolokia2AgentInput.pkl"
  import "plugins/inputs/NetInput.pkl"
  import "plugins/inputs/PrometheusInput.pkl"
  import "plugins/inputs/SocketListenerInput.pkl"
  import "plugins/inputs/SolrInput.pkl"
  import "plugins/inputs/X509CertInput.pkl"
  import "plugins/outputs/DiscardOutput.pkl"
  import "plugins/outputs/FileOutput.pkl"
  import "plugins/outputs/OpenTelemetryOutput.pkl"
  import "plugins/outputs/PrometheusClientOutput.pkl"
  import "plugins/processors/StarlarkProcessor.pkl"
  
  /// Telegraf has a few options you can configure under the [agent] section of the config.
  agent: AgentConfig?
//^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/agent.
//documentation
//> Telegraf has a few options you can configure under the [`agent`](file:///Users/thomas/src/github.com/apple/pkl-pantry/packages/com.influxdata.telegraf/Telegraf.pkl#L62,C1) section of the config.
//       ^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/AgentConfig#
  
  /// Output plugins write metrics to a location.
  ///
  /// Outputs commonly write to databases, network services, and messaging systems.
  outputs: Outputs?
//^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/outputs.
//documentation
//> Output plugins write metrics to a location.
//> 
//> Outputs commonly write to databases, network services, and messaging systems.
//         ^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Outputs#
  
  /// Input plugins gather and create metrics.
  ///
  /// They support both polling and event driven operation.
  inputs: Inputs?
//^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/inputs.
//documentation
//> Input plugins gather and create metrics.
//> 
//> They support both polling and event driven operation.
//        ^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Inputs#
  
  /// Processor plugins process metrics as they pass through and immediately emit results
  /// based on the values they process.
  ///
  /// For example, this could be printing all metrics or adding a tag to all metrics that pass through.
  processors: Processors?
//^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/processors.
//documentation
//> Processor plugins process metrics as they pass through and immediately emit results
//> based on the values they process.
//> 
//> For example, this could be printing all metrics or adding a tag to all metrics that pass through.
//            ^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Processors#
  
  /// All metrics being gathered on this host will be tagged with the tags specified here.
  global_tags: Mapping<String, String>?
//^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/global_tags.
//documentation
//> All metrics being gathered on this host will be tagged with the tags specified here.
//             ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                     ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
//                             ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
  
  open class Outputs {
//           ^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Outputs#
    /// This plugin writes telegraf metrics to files.
    file: Listing<FileOutput>?
//  ^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Outputs#file.
//  documentation
//  > This plugin writes telegraf metrics to files.
//        ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                ^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/outputs/FileOutput.pkl`/
  
    /// This output plugin simply drops all metrics that are sent to it.
    ///
    /// It is only meant to be used for testing purposes.
    discard: Listing<DiscardOutput>?
//  ^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Outputs#discard.
//  documentation
//  > This output plugin simply drops all metrics that are sent to it.
//  > 
//  > It is only meant to be used for testing purposes.
//           ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                   ^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/outputs/DiscardOutput.pkl`/
  
    /// This plugin starts a [Prometheus](https://prometheus.io) Client.
    ///
    /// Tt exposes all metrics on `/metrics` (default) to be polled by a Prometheus server.
    prometheus_client: Listing<PrometheusClientOutput>?
//  ^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Outputs#prometheus_client.
//  documentation
//  > This plugin starts a [Prometheus](https://prometheus.io) Client.
//  > 
//  > Tt exposes all metrics on `/metrics` (default) to be polled by a Prometheus server.
//                     ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                             ^^^^^^^^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/outputs/PrometheusClientOutput.pkl`/
  
    /// This plugin sends metrics to [OpenTelemetry](https://opentelemetry.io) servers and agents via gRPC.
    opentelemetry: Listing<OpenTelemetryOutput>?
//  ^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Outputs#opentelemetry.
//  documentation
//  > This plugin sends metrics to [OpenTelemetry](https://opentelemetry.io) servers and agents via gRPC.
//                 ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                         ^^^^^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/outputs/OpenTelemetryOutput.pkl`/
  }
  
  open class Inputs {
//           ^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Inputs#
    /// The file plugin parses the complete contents of a file every interval using the selected input data format.
    ///
    /// Note: If you wish to parse only newly appended lines use the tail input plugin instead.
    /// <https://github.com/influxdata/telegraf/blob/master/plugins/inputs/file>
    file: Listing<FileInput>?
//  ^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Inputs#file.
//  documentation
//  > The file plugin parses the complete contents of a file every interval using the selected input data format.
//  > 
//  > Note: If you wish to parse only newly appended lines use the tail input plugin instead.
//  > <https://github.com/influxdata/telegraf/blob/master/plugins/inputs/file>
//        ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/inputs/FileInput.pkl`/
  
    /// The prometheus input plugin gathers metrics from HTTP servers exposing metrics in Prometheus format.
    ///
    /// <https://github.com/influxdata/telegraf/blob/release-1.17/plugins/inputs/prometheus/README.md>
    prometheus: Listing<PrometheusInput>?
//  ^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Inputs#prometheus.
//  documentation
//  > The prometheus input plugin gathers metrics from HTTP servers exposing metrics in Prometheus format.
//  > 
//  > <https://github.com/influxdata/telegraf/blob/release-1.17/plugins/inputs/prometheus/README.md>
//              ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                      ^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/inputs/PrometheusInput.pkl`/
  
    /// The Socket Listener is a service input plugin that listens for messages
    /// from streaming (tcp, unix) or datagram (udp, unixgram) protocols.
    ///
    /// The plugin expects messages in the
    /// [Telegraf Input Data Formats](https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md).
    socket_listener: Listing<SocketListenerInput>?
//  ^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Inputs#socket_listener.
//  documentation
//  > The Socket Listener is a service input plugin that listens for messages
//  > from streaming (tcp, unix) or datagram (udp, unixgram) protocols.
//  > 
//  > The plugin expects messages in the
//  > [Telegraf Input Data Formats](https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md).
//                   ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                           ^^^^^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/inputs/SocketListenerInput.pkl`/
  
    /// The [Disk input plugin](https://github.com/influxdata/telegraf/blob/master/plugins/inputs/disk/README.md)
    /// gathers metrics about disk usage by mount point.
    disk: Listing<DiskInput>?
//  ^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Inputs#disk.
//  documentation
//  > The [Disk input plugin](https://github.com/influxdata/telegraf/blob/master/plugins/inputs/disk/README.md)
//  > gathers metrics about disk usage by mount point.
//        ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/inputs/DiskInput.pkl`/
  
    /// The [CPU input plugin](https://github.com/influxdata/telegraf/blob/master/plugins/inputs/cpu/README.md)
    /// gathers metrics about cpu usage.
    cpu: Listing<CpuInput>?
//  ^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Inputs#cpu.
//  documentation
//  > The [CPU input plugin](https://github.com/influxdata/telegraf/blob/master/plugins/inputs/cpu/README.md)
//  > gathers metrics about cpu usage.
//       ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//               ^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/inputs/CpuInput.pkl`/
  
    /// The [HTTP input plugin](https://github.com/influxdata/telegraf/blob/master/plugins/inputs/http/README.md)
    /// collects metrics from one or more HTTP(S) endpoints.
    ///
    /// The endpoint should have metrics formatted in one of the supported input data formats.
    /// Each data format has its own unique set of configuration options which can be added to the input configuration.
    http: Listing<HttpInput>?
//  ^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Inputs#http.
//  documentation
//  > The [HTTP input plugin](https://github.com/influxdata/telegraf/blob/master/plugins/inputs/http/README.md)
//  > collects metrics from one or more HTTP(S) endpoints.
//  > 
//  > The endpoint should have metrics formatted in one of the supported input data formats.
//  > Each data format has its own unique set of configuration options which can be added to the input configuration.
//        ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/inputs/HttpInput.pkl`/
  
    /// The [net input plugin](https://github.com/influxdata/telegraf/blob/master/plugins/inputs/net/NET_README.md)
    /// gathers metrics about network interface and protocol usage (Linux only).
    net: Listing<NetInput>?
//  ^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Inputs#net.
//  documentation
//  > The [net input plugin](https://github.com/influxdata/telegraf/blob/master/plugins/inputs/net/NET_README.md)
//  > gathers metrics about network interface and protocol usage (Linux only).
//       ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//               ^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/inputs/NetInput.pkl`/
  
    /// The [exec input plugin](https://github.com/influxdata/telegraf/blob/master/plugins/inputs/exec/README.md)
    /// read metrics from one or more commands that can output to stdout.
    exec: Listing<ExecInput>?
//  ^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Inputs#exec.
//  documentation
//  > The [exec input plugin](https://github.com/influxdata/telegraf/blob/master/plugins/inputs/exec/README.md)
//  > read metrics from one or more commands that can output to stdout.
//        ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/inputs/ExecInput.pkl`/
  
    /// The [Solr input plugin](https://github.com/influxdata/telegraf/blob/master/plugins/inputs/solr/README.md)
    /// gathers metrics from one or more Solr servers
    solr: Listing<SolrInput>?
//  ^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Inputs#solr.
//  documentation
//  > The [Solr input plugin](https://github.com/influxdata/telegraf/blob/master/plugins/inputs/solr/README.md)
//  > gathers metrics from one or more Solr servers
//        ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/inputs/SolrInput.pkl`/
  
    /// [Jolokia Agent Input Plugin](https://github.com/influxdata/telegraf/tree/master/plugins/inputs/jolokia2_agent)
    ///
    /// Reads JMX metrics from one or more Jolokia agent REST endpoints.
    jolokia2_agent: Listing<Jolokia2AgentInput>?
//  ^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Inputs#jolokia2_agent.
//  documentation
//  > [Jolokia Agent Input Plugin](https://github.com/influxdata/telegraf/tree/master/plugins/inputs/jolokia2_agent)
//  > 
//  > Reads JMX metrics from one or more Jolokia agent REST endpoints.
//                  ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                          ^^^^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/inputs/Jolokia2AgentInput.pkl`/
  
    /// The [X509 Cert Input Plugin](https://github.com/influxdata/telegraf/blob/master/plugins/inputs/x509_cert/README.md).
    ///
    /// Provides information about X509 certificates accessible via local file, tcp, udp, https or smtp protocol
    x509_cert: Listing<X509CertInput>?
//  ^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Inputs#x509_cert.
//  documentation
//  > The [X509 Cert Input Plugin](https://github.com/influxdata/telegraf/blob/master/plugins/inputs/x509_cert/README.md).
//  > 
//  > Provides information about X509 certificates accessible via local file, tcp, udp, https or smtp protocol
//             ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                     ^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/inputs/X509CertInput.pkl`/
  }
  
  open class Processors {
//           ^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Processors#
    /// The [starlark processor](https://github.com/influxdata/telegraf/tree/master/plugins/processors/starlark) calls a
    /// Starlark function for each matched metric, allowing for custom programmatic metric processing.
    starlark: Listing<StarlarkProcessor>?
//  ^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/Processors#starlark.
//  documentation
//  > The [starlark processor](https://github.com/influxdata/telegraf/tree/master/plugins/processors/starlark) calls a
//  > Starlark function for each matched metric, allowing for custom programmatic metric processing.
//            ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                    ^^^^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/processors/StarlarkProcessor.pkl`/
  }
  
  open class AgentConfig {
//           ^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/AgentConfig#
    /// Default data collection interval for all inputs.
    interval: Duration?
//  ^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/AgentConfig#interval.
//  documentation
//  > Default data collection interval for all inputs.
//            ^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Duration#
  
    /// Rounds collection interval to [interval].
    ///
    /// For example, `interval = 10.s` collects on :00, :10, :20, etc.
    round_interval: Boolean?
//  ^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/AgentConfig#round_interval.
//  documentation
//  > Rounds collection interval to [`interval`](file:///Users/thomas/src/github.com/apple/pkl-pantry/packages/com.influxdata.telegraf/Telegraf.pkl#L166,C3).
//  > 
//  > For example, `interval = 10.s` collects on :00, :10, :20, etc.
//                  ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Boolean#
  
    /// Telegraf will send metrics to outputs in batches of at most [metric_batch_size] metrics.
    ///
    /// This controls the size of writes that Telegraf sends to output plugins.
    metric_batch_size: Int?
//  ^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/AgentConfig#metric_batch_size.
//  documentation
//  > Telegraf will send metrics to outputs in batches of at most [`metric_batch_size`](file:///Users/thomas/src/github.com/apple/pkl-pantry/packages/com.influxdata.telegraf/Telegraf.pkl#L176,C3) metrics.
//  > 
//  > This controls the size of writes that Telegraf sends to output plugins.
//                     ^^^ reference pkl . pkl 0.29.0 `pkl.base`/Int#
  
    /// Maximum number of unwritten metrics per output.
    ///
    /// Increasing this value allows for longer periods of output downtime
    /// without dropping metrics at the cost of higher maximum memory usage.
    metric_buffer_limit: Int?
//  ^^^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/AgentConfig#metric_buffer_limit.
//  documentation
//  > Maximum number of unwritten metrics per output.
//  > 
//  > Increasing this value allows for longer periods of output downtime
//  > without dropping metrics at the cost of higher maximum memory usage.
//                       ^^^ reference pkl . pkl 0.29.0 `pkl.base`/Int#
  
    /// Collection jitter is used to jitter the collection by a random [interval].
    ///
    /// Each plugin will sleep for a random time within jitter before collecting.
    /// This can be used to avoid many plugins querying things like sysfs
    /// at the same time, which can have a measurable effect on the system.
    collection_jitter: Duration?
//  ^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/AgentConfig#collection_jitter.
//  documentation
//  > Collection jitter is used to jitter the collection by a random [`interval`](file:///Users/thomas/src/github.com/apple/pkl-pantry/packages/com.influxdata.telegraf/Telegraf.pkl#L166,C3).
//  > 
//  > Each plugin will sleep for a random time within jitter before collecting.
//  > This can be used to avoid many plugins querying things like sysfs
//  > at the same time, which can have a measurable effect on the system.
//                     ^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Duration#
  
    /// Default flushing [interval] for all outputs.
    ///
    /// Maximum flush interval is `flush_interval + flush_jitter`.
    flush_interval: Duration?
//  ^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/AgentConfig#flush_interval.
//  documentation
//  > Default flushing [`interval`](file:///Users/thomas/src/github.com/apple/pkl-pantry/packages/com.influxdata.telegraf/Telegraf.pkl#L166,C3) for all outputs.
//  > 
//  > Maximum flush interval is `flush_interval + flush_jitter`.
//                  ^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Duration#
  
    /// Default flush jitter for all outputs.
    ///
    /// This jitters the flush [interval] by a random amount.
    /// This is primarily to avoid large write spikes for users running a large number of telegraf instances.
    /// For example, a jitter of 5s and interval 10s means flushes will happen every 10-15s.
    flush_jitter: Duration?
//  ^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/AgentConfig#flush_jitter.
//  documentation
//  > Default flush jitter for all outputs.
//  > 
//  > This jitters the flush [`interval`](file:///Users/thomas/src/github.com/apple/pkl-pantry/packages/com.influxdata.telegraf/Telegraf.pkl#L166,C3) by a random amount.
//  > This is primarily to avoid large write spikes for users running a large number of telegraf instances.
//  > For example, a jitter of 5s and interval 10s means flushes will happen every 10-15s.
//                ^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Duration#
  
    /// Collected metrics are rounded to the precision specified as an [interval].
    ///
    /// Precision will NOT be used for service inputs.
    /// It is up to each individual service input to set the timestamp at the appropriate precision.
    precision: ("ns"|"us"|"ms"|"s")?
//  ^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/AgentConfig#precision.
//  documentation
//  > Collected metrics are rounded to the precision specified as an [`interval`](file:///Users/thomas/src/github.com/apple/pkl-pantry/packages/com.influxdata.telegraf/Telegraf.pkl#L166,C3).
//  > 
//  > Precision will NOT be used for service inputs.
//  > It is up to each individual service input to set the timestamp at the appropriate precision.
  
    /// Log at debug level.
    debug: Boolean?
//  ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/AgentConfig#debug.
//  documentation
//  > Log at debug level.
//         ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Boolean#
  
    /// Log only error level messages.
    quiet: Boolean?
//  ^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/AgentConfig#quiet.
//  documentation
//  > Log only error level messages.
//         ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Boolean#
  
    /// Name of the file to be logged to when using the "file" logtarget.
    ///
    /// If set to the empty string, logs are written to stderr.
    logfile: String?
//  ^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/AgentConfig#logfile.
//  documentation
//  > Name of the file to be logged to when using the "file" logtarget.
//  > 
//  > If set to the empty string, logs are written to stderr.
//           ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
  
    /// The logfile will be rotated after the time interval specified.
    ///
    /// When set to `0.s`, no time based rotation is performed.
    logfile_rotation_interval: Duration?
//  ^^^^^^^^^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/AgentConfig#logfile_rotation_interval.
//  documentation
//  > The logfile will be rotated after the time interval specified.
//  > 
//  > When set to `0.s`, no time based rotation is performed.
//                             ^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Duration#
  
    /// The logfile will be rotated when it becomes larger than the specified size.
    ///
    /// When set to `0.b`, no size based rotation is performed.
    logfile_rotation_max_size: DataSize?
//  ^^^^^^^^^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/AgentConfig#logfile_rotation_max_size.
//  documentation
//  > The logfile will be rotated when it becomes larger than the specified size.
//  > 
//  > When set to `0.b`, no size based rotation is performed.
//                             ^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/DataSize#
  
    /// Maximum number of rotated archives to keep, any older logs are deleted.
    ///
    /// If set to -1, no archives are removed.
    logfile_rotation_max_archives: Int?
//  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/AgentConfig#logfile_rotation_max_archives.
//  documentation
//  > Maximum number of rotated archives to keep, any older logs are deleted.
//  > 
//  > If set to -1, no archives are removed.
//                                 ^^^ reference pkl . pkl 0.29.0 `pkl.base`/Int#
  
    /// Override default hostname, if empty use os.Hostname().
    hostname: String?
//  ^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/AgentConfig#hostname.
//  documentation
//  > Override default hostname, if empty use os.Hostname().
//            ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
  
    /// If set to true, do no set the "host" tag in the telegraf agent.
    omit_hostname: Boolean?
//  ^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/AgentConfig#omit_hostname.
//  documentation
//  > If set to true, do no set the "host" tag in the telegraf agent.
//                 ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Boolean#
  }
  
  /// Telegraf uses golang's built-in `time.ParseDuration` underneath the hood.
  /// <https://golang.org/pkg/time/#ParseDuration>
  local durationConverter = (dur: Duration) ->
//      ^^^^^^^^^^^^^^^^^ definition local durationConverter_242
//      documentation
//      > Telegraf uses golang's built-in `time.ParseDuration` underneath the hood.
//      > <https://golang.org/pkg/time/#ParseDuration>
//                           ^^^ definition local dur_244
//                                ^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Duration#
    // Golang doesn't support days, so convert down to hours.
    if (dur.unit == "d")
//      ^^^ reference local dur_244
//          ^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Duration#unit.
      durationConverter.apply(dur.toUnit("h"))
//    ^^^^^^^^^^^^^^^^^ reference local durationConverter_242
//                      ^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Function1#apply().
//                            ^^^ reference local dur_244
//                                ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Duration#toUnit().
    else
      let (unit = dur.unit)
//         ^^^^ definition local unit_249
//                ^^^ reference local dur_244
//                    ^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Duration#unit.
        // Most of Pkl's unit names are exact matches for Golang's unit names, except `min` needs to turn into `m`.
        let (telegrafUnit = if (unit == "min") "m" else unit)
//           ^^^^^^^^^^^^ definition local telegrafUnit_251
//                              ^^^^ reference local unit_249
//                                                      ^^^^ reference local unit_249
          "\(dur.value)\(telegrafUnit)"
//           ^^^ reference local dur_244
//               ^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Duration#value.
//                       ^^^^^^^^^^^^ reference local telegrafUnit_251
  
  /// Telegraf uses github.coim/alecthomas/units to parse data sizes.
  /// The parser is pretty lenient; see tests here:
  /// <https://github.com/alecthomas/units/blob/master/bytes_test.go>
  local dataSizeConverter = (size: DataSize) ->
//      ^^^^^^^^^^^^^^^^^ definition local dataSizeConverter_254
//      documentation
//      > Telegraf uses github.coim/alecthomas/units to parse data sizes.
//      > The parser is pretty lenient; see tests here:
//      > <https://github.com/alecthomas/units/blob/master/bytes_test.go>
//                           ^^^^ definition local size_257
//                                 ^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/DataSize#
      let (unit = size.unit)
//         ^^^^ definition local unit_258
//                ^^^^ reference local size_257
//                     ^^^^ reference pkl . pkl 0.29.0 `pkl.base`/DataSize#unit.
        let (telegrafUnit =
//           ^^^^^^^^^^^^ definition local telegrafUnit_259
          if (unit.length == 3) unit[0].toUpperCase() + unit[1] + unit[2].toUpperCase()
//            ^^^^ reference local unit_258
//                 ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#length.
//                              ^^^^ reference local unit_258
//                                                      ^^^^ reference local unit_258
//                                                                ^^^^ reference local unit_258
          else if (unit.length == 2) unit.toUpperCase()
//                 ^^^^ reference local unit_258
//                      ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#length.
//                                   ^^^^ reference local unit_258
//                                        ^^^^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#toUpperCase().
          else "")
          "\(size.value)\(telegrafUnit)"
//           ^^^^ reference local size_257
//                ^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/DataSize#value.
//                        ^^^^^^^^^^^^ reference local telegrafUnit_259
  
  output {
//^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/output.
    renderer = (Plugin.output.renderer) {
//  ^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/renderer.
//              ^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/Plugin.pkl`/
//                     ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Module#output.
//                            ^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/FileOutput#renderer.
      converters {
//    ^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `Telegraf.pkl`/converters.
        [Duration] = durationConverter
//       ^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Duration#
//                   ^^^^^^^^^^^^^^^^^ reference local durationConverter_242
        [DataSize] = dataSizeConverter
//       ^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/DataSize#
//                   ^^^^^^^^^^^^^^^^^ reference local dataSizeConverter_254
      }
    }
  }
  
