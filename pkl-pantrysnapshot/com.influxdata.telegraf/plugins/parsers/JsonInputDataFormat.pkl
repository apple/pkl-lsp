  //===----------------------------------------------------------------------===//
  // Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //     https://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.
  //===----------------------------------------------------------------------===//
  /// The JSON data format parses a JSON object or an array of objects into metric fields.
  ///
  /// **NOTE:** All JSON numbers are converted to float fields.
  /// JSON strings and booleans are ignored unless specified in the [tag_keys] or [json_string_fields] options.
  @ModuleInfo { minPklVersion = "0.25.0" }
// ^^^^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/ModuleInfo#
//              ^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/parsers/JsonInputDataFormat.pkl`/minPklVersion.
  module com.influxdata.telegraf.plugins.parsers.JsonInputDataFormat
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/parsers/JsonInputDataFormat.pkl`/
  
  extends "InputDataFormat.pkl"
  
  data_format: "json"
//^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/parsers/JsonInputDataFormat.pkl`/data_format.
  
  /// When strict is true and a JSON array is being parsed,
  /// all objects within the array must be valid.
  ///
  /// Default: `true`
  json_strict: Boolean?
//^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/parsers/JsonInputDataFormat.pkl`/json_strict.
//documentation
//> When strict is true and a JSON array is being parsed,
//> all objects within the array must be valid.
//> 
//> Default: `true`
//             ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Boolean#
  
  /// A GJSON path that specifies a specific chunk of JSON to be parsed.
  ///
  /// If not specified, the whole document will be parsed.
  ///
  /// GJSON query paths are described here:
  /// <https://github.com/tidwall/gjson/tree/v1.3.0#path-syntax>
  json_query: String?
//^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/parsers/JsonInputDataFormat.pkl`/json_query.
//documentation
//> A GJSON path that specifies a specific chunk of JSON to be parsed.
//> 
//> If not specified, the whole document will be parsed.
//> 
//> GJSON query paths are described here:
//> <https://github.com/tidwall/gjson/tree/v1.3.0#path-syntax>
//            ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
  
  /// An array of keys that should be added as tags.
  ///
  /// Matching keys are no longer saved as fields.
  /// Supports wildcard glob matching.
  tag_keys: Listing<String>?
//^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/parsers/JsonInputDataFormat.pkl`/tag_keys.
//documentation
//> An array of keys that should be added as tags.
//> 
//> Matching keys are no longer saved as fields.
//> Supports wildcard glob matching.
//          ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                  ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
  
  /// Array of glob pattern strings or booleans keys that should be added as string fields.
  json_string_fields: Listing<String>?
//^^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/parsers/JsonInputDataFormat.pkl`/json_string_fields.
//documentation
//> Array of glob pattern strings or booleans keys that should be added as string fields.
//                    ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Listing#
//                            ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
  
  /// The key to use as the measurement name.
  json_name_key: String?
//^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/parsers/JsonInputDataFormat.pkl`/json_name_key.
//documentation
//> The key to use as the measurement name.
//               ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
  
  /// The key containing the time that should be used to create the metric.
  json_time_key: String?
//^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/parsers/JsonInputDataFormat.pkl`/json_time_key.
//documentation
//> The key containing the time that should be used to create the metric.
//               ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
  
  /// The time layout that should be used to interpret [json_time_key].
  ///
  /// The time must be `"unix"`, `"unix_ms"`, `"unix_us"`, `"unix_ns"`, or a time in the "reference time".
  /// To define a different format, arrange the values from the "reference time"
  /// in the example to match the format you will be using.
  /// For more information on the "reference time", visit <https://golang.org/pkg/time/#Time.Format>.
  ///
  /// Examples:
  /// ```
  /// json_time_format = "Mon Jan 2 15:04:05 -0700 MST 2006"
  /// json_time_format = "2006-01-02T15:04:05Z07:00"
  /// json_time_format = "01/02/2006 15:04:05"
  /// json_time_format = "unix"
  /// json_time_format = "unix_ms"
  /// ```
  json_time_format: ("unix"|"unix_ms"|"unix_us"|"unix_ns"|String)?
//^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/parsers/JsonInputDataFormat.pkl`/json_time_format.
//documentation
//> The time layout that should be used to interpret [`json_time_key`](file:///Users/thomas/src/github.com/apple/pkl-pantry/packages/com.influxdata.telegraf/plugins/parsers/JsonInputDataFormat.pkl#L54,C1).
//> 
//> The time must be `"unix"`, `"unix_ms"`, `"unix_us"`, `"unix_ns"`, or a time in the "reference time".
//> To define a different format, arrange the values from the "reference time"
//> in the example to match the format you will be using.
//> For more information on the "reference time", visit <https://golang.org/pkg/time/#Time.Format>.
//> 
//> Examples:
//> ```
//> json_time_format = "Mon Jan 2 15:04:05 -0700 MST 2006"
//> json_time_format = "2006-01-02T15:04:05Z07:00"
//> json_time_format = "01/02/2006 15:04:05"
//> json_time_format = "unix"
//> json_time_format = "unix_ms"
//> ```
//                                                        ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
  
  /// Allows you to provide an override for timestamps
  /// that don't already include an offset, e.g., `"04/06/2016 12:41:45"`.
  ///
  /// Default: `""` (renders UTC)
  ///
  /// Options are as follows:
  /// - `"Local"`: interpret based on machine localtime
  /// - `"America/New_York"`: Unix TZ values like those found in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  /// - `"UTC"` (or blank/unspecified): will return timestamp in UTC
  json_timezone: String?
//^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/com.influxdata.telegraf 1.5.0 `plugins/parsers/JsonInputDataFormat.pkl`/json_timezone.
//documentation
//> Allows you to provide an override for timestamps
//> that don't already include an offset, e.g., `"04/06/2016 12:41:45"`.
//> 
//> Default: `""` (renders UTC)
//> 
//> Options are as follows:
//> - `"Local"`: interpret based on machine localtime
//> - `"America/New_York"`: Unix TZ values like those found in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
//> - `"UTC"` (or blank/unspecified): will return timestamp in UTC
//               ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
  
