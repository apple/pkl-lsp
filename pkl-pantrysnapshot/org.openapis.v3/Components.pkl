  //===----------------------------------------------------------------------===//
  // Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //     https://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.
  //===----------------------------------------------------------------------===//
  /// Holds a set of reusable objects for different aspects of the OAS.
  ///
  /// All objects defined within the components object will have no effect on the API unless they are explicitly
  /// referenced from properties outside the components object.
  module org.openapis.v3.Components
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/
  
  import "expressions.pkl"
  import "Example.pkl"
  import "Header.pkl"
  import "Link.pkl"
  import "Parameter.pkl"
  import "Reference.pkl"
  import "RequestBody.pkl"
  import "Response.pkl"
  import "Schema.pkl"
  import "SecurityScheme.pkl"
  import "PathItem.pkl"
  
  /// Component mapping key type used to reference all component values.
  typealias ComponentKey = String(matches(Regex(#"[a-zA-Z0-9.\-_]+"#)))
//          ^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/ComponentKey#
//          documentation
//          > Component mapping key type used to reference all component values.
//                         ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
//                                ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#matches().
//                                        ^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Regex().
  
  /// Component type name for use with component reference helpers.
  typealias ComponentType = "schemas"|"responses"|"parameters"|"examples"|"requestBodies"|"headers"|"links"
//          ^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/ComponentType#
//          documentation
//          > Component type name for use with component reference helpers.
  
  /// An object to hold reusable Schema Objects.
  schemas: Mapping<ComponentKey, *Schema|Reference>?
//^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/schemas.
//documentation
//> An object to hold reusable Schema Objects.
//         ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                 ^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/ComponentKey#
//                                ^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Schema.pkl`/
//                                       ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Reference.pkl`/
  
  /// An object to hold reusable Response Objects.
  responses: Mapping<ComponentKey, *Response|Reference>?
//^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/responses.
//documentation
//> An object to hold reusable Response Objects.
//           ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                   ^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/ComponentKey#
//                                  ^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Response.pkl`/
//                                           ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Reference.pkl`/
  
  /// An object to hold reusable Parameter Objects.
  parameters: Mapping<ComponentKey, *Parameter|Reference>?
//^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/parameters.
//documentation
//> An object to hold reusable Parameter Objects.
//            ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                    ^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/ComponentKey#
//                                   ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Parameter.pkl`/
//                                             ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Reference.pkl`/
  
  /// An object to hold reusable Example Objects.
  examples: Mapping<ComponentKey, *Example|Reference>?
//^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/examples.
//documentation
//> An object to hold reusable Example Objects.
//          ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                  ^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/ComponentKey#
//                                 ^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Example.pkl`/
//                                         ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Reference.pkl`/
  
  /// An object to hold reusable RequestBody Objects.
  requestBodies: Mapping<ComponentKey, *RequestBody|Reference>?
//^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/requestBodies.
//documentation
//> An object to hold reusable RequestBody Objects.
//               ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                       ^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/ComponentKey#
//                                      ^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `RequestBody.pkl`/
//                                                  ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Reference.pkl`/
  
  /// An object to hold reusable Header Objects.
  headers: Mapping<ComponentKey, *Header|Reference>?
//^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/headers.
//documentation
//> An object to hold reusable Header Objects.
//         ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                 ^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/ComponentKey#
//                                ^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Header.pkl`/
//                                       ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Reference.pkl`/
  
  /// An object to hold reusable Security Scheme Objects.
  securitySchemes: Mapping<ComponentKey, *SecurityScheme|Reference>?
//^^^^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/securitySchemes.
//documentation
//> An object to hold reusable Security Scheme Objects.
//                 ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                         ^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/ComponentKey#
//                                        ^^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `SecurityScheme.pkl`/
//                                                       ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Reference.pkl`/
  
  /// An object to hold reusable Link Objects.
  links: Mapping<ComponentKey, *Link|Reference>?
//^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/links.
//documentation
//> An object to hold reusable Link Objects.
//       ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//               ^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/ComponentKey#
//                              ^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Link.pkl`/
//                                   ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Reference.pkl`/
  
  /// An object to hold reusable Callback Objects.
  callbacks: Mapping<ComponentKey, *Mapping<expressions.Expression, PathItem>|Reference>?
//^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/callbacks.
//documentation
//> An object to hold reusable Callback Objects.
//           ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                   ^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/ComponentKey#
//                                  ^^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/Mapping#
//                                                      ^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `expressions.pkl`/Expression#
//                                                                  ^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `PathItem.pkl`/
//                                                                            ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Reference.pkl`/
  
  /// Component reference helper function. This reference will point to the named component in the local document's
  /// "components" fields.
  function componentRef(type: ComponentType, name: String): Reference =
//         ^^^^^^^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/componentRef().
//         documentation
//         > Component reference helper function. This reference will point to the named component in the local document's
//         > "components" fields.
//                      ^^^^ definition local type_69
//                            ^^^^^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/ComponentType#
//                                           ^^^^ definition local name_69
//                                                 ^^^^^^ reference pkl . pkl 0.29.0 `pkl.base`/String#
//                                                          ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Reference.pkl`/
    // TODO: can we throw an error if the referenced component does not exist? This would be extremely useful.
    // We may need to check for reference consistencey in the render step.
    new Reference {
//      ^^^^^^^^^ reference pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Reference.pkl`/
      `$ref` = "#/components/\(type)/\(name)"
//    ^^^^^^ definition pkl . package://pkg.pkl-lang.org/pkl-pantry/org.openapis.v3 2.2.0 `Components.pkl`/$ref.
//                             ^^^^ reference local type_69
//                                     ^^^^ reference local name_69
    }
  
